<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Property Posting Form</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 flex justify-center items-center min-h-screen">
<nav class="bg-gray-900 text-white shadow-md">
    <div class="max-w-7xl mx-auto px-4">
        <div class="flex justify-between h-16">
            <!-- Center: Menu Links -->
            <div class="hidden md:flex space-x-6 items-center">
                <a href="/dashboard-landlord" class="hover:text-indigo-400">Dashboard</a>
            </div>
            <!-- Right: Logout Button -->
            <div class="flex items-center">
                <button
                        id="logoutBtn"
                        class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg shadow-md">
                    Logout
                </button>
            </div>
            <!-- Mobile Menu Button -->
            <div class="flex items-center md:hidden">
                <button id="mobileMenuBtn" class="focus:outline-none">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-width="2"
                         viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round"
                              d="M4 6h16M4 12h16M4 18h16"/>
                    </svg>
                </button>
            </div>
        </div>
    </div>
    <!-- Mobile Menu Items -->
    <div id="mobileMenu" class="hidden md:hidden px-4 pb-4 space-y-2">
        <a href="/dashboard-landlord" class="block hover:text-indigo-400">Dashboard</a>
        <button
                id="logoutBtnMobile"
                class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg shadow-md w-full">
            Logout
        </button>
    </div>
</nav>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const mobileMenuBtn = document.getElementById("mobileMenuBtn");
        const mobileMenu = document.getElementById("mobileMenu");
        const logoutButtons = [document.getElementById("logoutBtn"), document.getElementById("logoutBtnMobile")];
        // Toggle mobile menu
        mobileMenuBtn.addEventListener("click", () => {
            mobileMenu.classList.toggle("hidden");
        });
        // Logout logic
        logoutButtons.forEach(btn => {
            if (btn) {
                btn.addEventListener("click", async () => {
                    try {
                        const res = await fetch("/logout-landlord", { method: "POST" });
                        if (res.ok) {
                            window.location.href = "/login-landlord";
                        } else {
                            alert("Logout failed.");
                        }
                    } catch (err) {
                        console.error(err);
                    }
                });
            }
        });
    });
</script>
<div class="flex">
    <!-- Sidebar -->
    <aside id="sidebar" class="fixed md:relative z-40 inset-y-0 left-0 w-64 bg-gray-900 text-white transform -translate-x-full md:translate-x-0 transition-transform duration-200 ease-in-out">
        <div class="h-16 flex items-center justify-center bg-gray-800">
            <h1 class="text-xl font-bold">Property Panel</h1>
        </div>
        <nav class="mt-6 flex flex-col space-y-2 px-4">
            <a href="/property/add" class="px-4 py-2 rounded-lg hover:bg-gray-700">Add Property</a>
            <a href="/property/view" class="px-4 py-2 rounded-lg hover:bg-gray-700">View All Properties</a>
            <a href="/booking/view" class="px-4 py-2 rounded-lg hover:bg-gray-700">View All Bookings</a>
            <a href="/booking/search/email" class="px-4 py-2 rounded-lg hover:bg-gray-700">View Booking By Email</a>
            <a href="/property/update-payment" class="px-4 py-2 rounded-lg hover:bg-gray-700">Update Payment</a>
            <a href="/property/search/email" class="px-4 py-2 rounded-lg hover:bg-gray-700">Search by Email</a>
            <a href="/property/search/booking" class="px-4 py-2 rounded-lg hover:bg-gray-700">Search by Booking ID</a>
        </nav>
    </aside>
    <!-- Main Content -->
    <div class="flex-1 ml-0 md:ml-64 bg-gray-100 min-h-screen">
        <!-- Top Bar -->
        <header class="h-16 flex items-center bg-white shadow-md px-4">
            <button id="sidebarToggle" class="md:hidden mr-4 focus:outline-none">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-width="2"
                     viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round"
                          d="M4 6h16M4 12h16M4 18h16"/>
                </svg>
            </button>
            <h2 class="text-lg font-semibold">Dashboard</h2>
        </header>

        <!-- Page Content goes here -->
        <main class="p-6">
            <%- body %> <!-- This is where your page content will render -->
        </main>
    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const sidebar = document.getElementById("sidebar");
        const toggleBtn = document.getElementById("sidebarToggle");

        toggleBtn.addEventListener("click", () => {
            sidebar.classList.toggle("-translate-x-full");
        });
    });
</script>

<div class="w-full max-w-2xl bg-white rounded-xl shadow-md p-8">
    <h1 class="text-2xl font-bold text-center mb-6">Property Posting Form</h1>

    <form id="propertyForm" class="space-y-4" action="/submit-property" method="POST">
        <!-- Owner Name -->
        <div>
            <label class="block text-sm font-medium mb-1">Owner Name</label>
            <input type="text" id="ownerName" name="ownerName" class="w-full border rounded-lg p-2 focus:ring focus:ring-blue-300" placeholder="Enter Owner Name">
            <p class="text-red-500 text-sm hidden" id="ownerNameError">Owner Name should not be empty.</p>
        </div>

        <!-- Owner Email -->
        <div>
            <label class="block text-sm font-medium mb-1">Owner Email</label>
            <input type="email" id="ownerEmail" name="ownerEmail" class="w-full border rounded-lg p-2 focus:ring focus:ring-blue-300" placeholder="Enter Owner Email">
            <p class="text-red-500 text-sm hidden" id="ownerEmailError">Enter a valid email.</p>
        </div>

        <!-- Owner Mobile -->
        <div>
            <label class="block text-sm font-medium mb-1">Owner Mobile Number</label>
            <input type="tel" id="ownerMobile" name="ownerMobile" class="w-full border rounded-lg p-2 focus:ring focus:ring-blue-300" placeholder="Enter Mobile Number">
            <p class="text-red-500 text-sm hidden" id="ownerMobileError">Enter a valid mobile number.</p>
        </div>

        <!-- Property Address -->
        <div>
            <label class="block text-sm font-medium mb-1">Property Address</label>
            <textarea id="propertyAddress" name="propertyAddress" rows="2" class="w-full border rounded-lg p-2 focus:ring focus:ring-blue-300" placeholder="Enter Property Address"></textarea>
            <p class="text-red-500 text-sm hidden" id="propertyAddressError">Property Address cannot be empty.</p>
        </div>

        <!-- Property Name -->
        <div>
            <label class="block text-sm font-medium mb-1">Property Name</label>
            <input type="text" id="propertyName" name="propertyName" class="w-full border rounded-lg p-2 focus:ring focus:ring-blue-300" placeholder="Enter Property Name">
            <p class="text-red-500 text-sm hidden" id="propertyNameError">Property Name cannot be empty.</p>
        </div>

        <!-- Property Type -->
        <div>
            <label class="block text-sm font-medium mb-1">Property Type</label>
            <input type="text" id="propertyType" name="propertyType" class="w-full border rounded-lg p-2 focus:ring focus:ring-blue-300" placeholder="Enter Property Type">
            <p class="text-red-500 text-sm hidden" id="propertyTypeError">Property Type cannot be empty.</p>
        </div>

        <!-- Property Classification -->
        <div>
            <label class="block text-sm font-medium mb-1">Property Classification</label>
            <input type="text" id="propertyClassification" name="propertyClassification" class="w-full border rounded-lg p-2 focus:ring focus:ring-blue-300" placeholder="Enter Property Classification">
            <p class="text-red-500 text-sm hidden" id="propertyClassificationError">Property Classification cannot be empty.</p>
        </div>

        <!-- Property Category -->
        <div>
            <label class="block text-sm font-medium mb-1">Property Category</label>
            <input type="text" id="propertyCategory" name="propertyCategory" class="w-full border rounded-lg p-2 focus:ring focus:ring-blue-300" placeholder="Enter Property Category">
            <p class="text-red-500 text-sm hidden" id="propertyCategoryError">Property Category cannot be empty.</p>
        </div>

        <!-- Rent -->
        <div>
            <label class="block text-sm font-medium mb-1">Rent</label>
            <input type="number" id="rent" name="rent" step="0.01" class="w-full border rounded-lg p-2 focus:ring focus:ring-blue-300" placeholder="Enter Rent">
            <p class="text-red-500 text-sm hidden" id="rentError">Rent must be greater than 0.</p>
        </div>

        <!-- Advance -->
        <div>
            <label class="block text-sm font-medium mb-1">Advance</label>
            <input type="number" id="advance" name="advance" step="0.01" class="w-full border rounded-lg p-2 focus:ring focus:ring-blue-300" placeholder="Enter Advance">
            <p class="text-red-500 text-sm hidden" id="advanceError">Advance must be greater than 0.</p>
        </div>

        <!-- Submit -->
        <div class="text-center">
            <button type="submit" class="bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600">Submit</button>
        </div>
    </form>
</div>

<script>
    document.getElementById("propertyForm").addEventListener("submit", function(event) {
        let isValid = true;

        // Owner Name
        const ownerName = document.getElementById("ownerName").value.trim();
        if (ownerName === "") {
            document.getElementById("ownerNameError").classList.remove("hidden");
            isValid = false;
        } else {
            document.getElementById("ownerNameError").classList.add("hidden");
        }

        // Owner Email
        const ownerEmail = document.getElementById("ownerEmail").value.trim();
        const emailPattern = /^[^ ]+@[^ ]+\.[a-z]{2,3}$/;
        if (!emailPattern.test(ownerEmail)) {
            document.getElementById("ownerEmailError").classList.remove("hidden");
            isValid = false;
        } else {
            document.getElementById("ownerEmailError").classList.add("hidden");
        }

        // Mobile
        const ownerMobile = document.getElementById("ownerMobile").value.trim();
        const mobilePattern = /^[0-9]{10}$/;
        if (!mobilePattern.test(ownerMobile)) {
            document.getElementById("ownerMobileError").classList.remove("hidden");
            isValid = false;
        } else {
            document.getElementById("ownerMobileError").classList.add("hidden");
        }

        // Property Address
        const propertyAddress = document.getElementById("propertyAddress").value.trim();
        if (propertyAddress === "") {
            document.getElementById("propertyAddressError").classList.remove("hidden");
            isValid = false;
        } else {
            document.getElementById("propertyAddressError").classList.add("hidden");
        }

        // Property Name
        const propertyName = document.getElementById("propertyName").value.trim();
        if (propertyName === "") {
            document.getElementById("propertyNameError").classList.remove("hidden");
            isValid = false;
        } else {
            document.getElementById("propertyNameError").classList.add("hidden");
        }

        // Property Type
        const propertyType = document.getElementById("propertyType").value.trim();
        if (propertyType === "") {
            document.getElementById("propertyTypeError").classList.remove("hidden");
            isValid = false;
        } else {
            document.getElementById("propertyTypeError").classList.add("hidden");
        }

        // Property Classification
        const propertyClassification = document.getElementById("propertyClassification").value.trim();
        if (propertyClassification === "") {
            document.getElementById("propertyClassificationError").classList.remove("hidden");
            isValid = false;
        } else {
            document.getElementById("propertyClassificationError").classList.add("hidden");
        }

        // Property Category
        const propertyCategory = document.getElementById("propertyCategory").value.trim();
        if (propertyCategory === "") {
            document.getElementById("propertyCategoryError").classList.remove("hidden");
            isValid = false;
        } else {
            document.getElementById("propertyCategoryError").classList.add("hidden");
        }

        // Rent
        const rent = parseFloat(document.getElementById("rent").value);
        if (isNaN(rent) || rent <= 0) {
            document.getElementById("rentError").classList.remove("hidden");
            isValid = false;
        } else {
            document.getElementById("rentError").classList.add("hidden");
        }

        // Advance
        const advance = parseFloat(document.getElementById("advance").value);
        if (isNaN(advance) || advance <= 0) {
            document.getElementById("advanceError").classList.remove("hidden");
            isValid = false;
        } else {
            document.getElementById("advanceError").classList.add("hidden");
        }

        if (!isValid) {
            event.preventDefault();
        }
    });
</script>
<footer class="bg-gray-900 text-white py-10">
    <div class="max-w-7xl mx-auto px-4 grid grid-cols-1 md:grid-cols-3 gap-8">

        <!-- Column 1: Logo + Description -->
        <div>
            <h2 class="text-2xl font-bold mb-3">Rental Booking</h2>
            <p class="text-gray-400 text-sm">Your trusted partner for quick and safe rental bookings around the city.</p>
        </div>

        <!-- Column 3: Contact Info -->
        <div>
            <h3 class="text-xl font-semibold mb-3">Contact Us</h3>
            <p class="text-gray-300 text-sm"> Barrackpore, Kolkata</p>
            <p class="text-gray-300 text-sm">+91 9875441655</p>
            <p class="text-gray-300 text-sm"> support@ridenow.com</p>
        </div>
    </div>

    <!-- Bottom Bar -->
    <div class="mt-10 border-t border-gray-700 pt-4 text-center text-sm text-gray-400">
        &copy; <span id="year">© Suman Talukdar</span> E-Rentals. All rights reserved.
    </div>
</footer>
</body>
</html>
